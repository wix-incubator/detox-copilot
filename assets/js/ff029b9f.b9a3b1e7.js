"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[389],{5969:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"guides/implementing-custom-testing-framework-driver","title":"Implementing Custom Testing Framework Driver","description":"The testing framework driver is a core component of Copilot by Detox, enabling seamless integration with any testing framework. It allows Copilot to translate natural language commands into actionable steps using the framework\'s API. This guide outlines how to implement and integrate a custom testing framework driver into the Copilot ecosystem.","source":"@site/docs/guides/implementing-custom-testing-framework-driver.md","sourceDirName":"guides","slug":"/guides/implementing-custom-testing-framework-driver","permalink":"/detox-copilot/docs/guides/implementing-custom-testing-framework-driver","draft":false,"unlisted":false,"editUrl":"https://github.com/wix-incubator/detox-copilot/blob/copilot-doc-site/website/docs/guides/implementing-custom-testing-framework-driver.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"implementing-custom-testing-framework-driver","title":"Implementing Custom Testing Framework Driver","sidebar_label":"Implementing Custom Testing Framework Driver","sidebar_position":4},"sidebar":"guideSidebar","previous":{"title":"Copilot Best Practices","permalink":"/detox-copilot/docs/guides/copilot-best-practices"},"next":{"title":"Contributing to Copilot","permalink":"/detox-copilot/docs/guides/contributing-to-copilot-by-detox"}}');var n=t(4848),o=t(8453);const s={id:"implementing-custom-testing-framework-driver",title:"Implementing Custom Testing Framework Driver",sidebar_label:"Implementing Custom Testing Framework Driver",sidebar_position:4},a="Implementing a Custom Testing Framework Driver",d={},l=[{value:"Recommended Approach for Framework Support",id:"recommended-approach-for-framework-support",level:2},{value:"Framework Integration",id:"framework-integration",level:2},{value:"Steps to Implement a Custom Framework Driver",id:"steps-to-implement-a-custom-framework-driver",level:2},{value:"1. <strong>Understand the <strong><strong><code>TestingFrameworkDriver</code></strong></strong> Interface</strong>",id:"1-understand-the-testingframeworkdriver-interface",level:3},{value:"2. <strong>Develop Your Driver</strong>",id:"2-develop-your-driver",level:3},{value:"3. <strong>Define the API Catalog</strong>",id:"3-define-the-api-catalog",level:3},{value:"4. <strong>Contribute and Collaborate</strong>",id:"4-contribute-and-collaborate",level:3},{value:"Additional Resources",id:"additional-resources",level:2}];function c(e){const r={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"implementing-a-custom-testing-framework-driver",children:"Implementing a Custom Testing Framework Driver"})}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.strong,{children:"testing framework driver"})," is a core component of ",(0,n.jsx)(r.strong,{children:"Copilot by Detox"}),", enabling seamless integration with any testing framework. It allows Copilot to translate natural language commands into actionable steps using the framework's API. This guide outlines how to implement and integrate a custom testing framework driver into the Copilot ecosystem."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"recommended-approach-for-framework-support",children:"Recommended Approach for Framework Support"}),"\n",(0,n.jsxs)(r.p,{children:["Where possible, framework support should ideally be provided directly from the framework's codebase. For example, Detox includes support within its own repository: ",(0,n.jsx)(r.a,{href:"https://github.com/wix/Detox/tree/master/detox/src/copilot",children:"Detox Copilot Driver"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["If this is not feasible, or for custom efforts, feel free to reach out via our ",(0,n.jsx)(r.a,{href:"https://github.com/wix-incubator/detox-copilot/issues",children:"GitHub Issues Page"})," to discuss integration ideas before development."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"framework-integration",children:"Framework Integration"}),"\n",(0,n.jsxs)(r.p,{children:["Copilot is designed to integrate with any testing framework. This flexibility allows developers to extend its capabilities by implementing custom drivers that align with the ",(0,n.jsx)(r.code,{children:"TestingFrameworkDriver"})," interface."]}),"\n",(0,n.jsxs)(r.p,{children:["To view supported frameworks, visit our ",(0,n.jsx)(r.a,{href:"../pages/supported-frameworks",children:"Supported Frameworks"})," page."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"steps-to-implement-a-custom-framework-driver",children:"Steps to Implement a Custom Framework Driver"}),"\n",(0,n.jsxs)(r.h3,{id:"1-understand-the-testingframeworkdriver-interface",children:["1. ",(0,n.jsxs)(r.strong,{children:["Understand the ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.code,{children:"TestingFrameworkDriver"})})})," Interface"]})]}),"\n",(0,n.jsxs)(r.p,{children:["All drivers must implement the ",(0,n.jsx)(r.code,{children:"TestingFrameworkDriver"})," interface. Key methods include:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"captureSnapshotImage(): Promise<string | undefined>"}),(0,n.jsx)(r.br,{}),"\n","(Optional) Captures a snapshot of the current screen."]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"captureViewHierarchyString(): Promise<string>"}),(0,n.jsx)(r.br,{}),"\n","Returns the view hierarchy of the current screen as a string."]}),"\n"]}),"\n",(0,n.jsxs)(r.li,{children:["\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"apiCatalog: TestingFrameworkAPICatalog"}),(0,n.jsx)(r.br,{}),"\n","Categorizes the framework\u2019s actions, matchers, and utilities."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["For detailed documentation, see the ",(0,n.jsx)(r.a,{href:"/detox-copilot/docs/API/framework-driver",children:"Framework Driver API"}),"."]}),"\n",(0,n.jsxs)(r.h3,{id:"2-develop-your-driver",children:["2. ",(0,n.jsx)(r.strong,{children:"Develop Your Driver"})]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Create your driver under the ",(0,n.jsx)(r.code,{children:"src/drivers"})," directory."]}),"\n",(0,n.jsx)(r.li,{children:"Follow naming conventions and maintain consistency with existing drivers."}),"\n",(0,n.jsx)(r.li,{children:"Implement the required interface methods."}),"\n"]}),"\n",(0,n.jsxs)(r.h3,{id:"3-define-the-api-catalog",children:["3. ",(0,n.jsx)(r.strong,{children:"Define the API Catalog"})]}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"apiCatalog"})," organizes the framework\u2019s capabilities into categories:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Actions"}),": e.g., ",(0,n.jsx)(r.code,{children:"tap"}),", ",(0,n.jsx)(r.code,{children:"longPress"}),", ",(0,n.jsx)(r.code,{children:"scroll"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Matchers"}),": e.g., ",(0,n.jsx)(r.code,{children:"by.id"}),", ",(0,n.jsx)(r.code,{children:"by.text"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Utilities"}),": Framework-specific helpers."]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Provide clear documentation and examples for each method to ensure ease of use."}),"\n",(0,n.jsxs)(r.h3,{id:"4-contribute-and-collaborate",children:["4. ",(0,n.jsx)(r.strong,{children:"Contribute and Collaborate"})]}),"\n",(0,n.jsxs)(r.p,{children:["Share your driver with the community by proposing your idea on the ",(0,n.jsx)(r.a,{href:"https://github.com/wix-incubator/detox-copilot/issues",children:"GitHub Issues Page"}),". Once aligned, contribute your work by adding your driver to the repository and providing relevant documentation."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.a,{href:"/detox-copilot/docs/API/framework-driver",children:"Framework Driver API"}),": Detailed interface and example implementation."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.a,{href:"../pages/supported-frameworks",children:"Supported Frameworks"}),": List of frameworks Copilot supports."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.a,{href:"https://github.com/wix-incubator/detox-copilot/issues",children:"GitHub Issues"}),": Collaborate and discuss new drivers."]}),"\n"]})]})}function m(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>a});var i=t(6540);const n={},o=i.createContext(n);function s(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(o.Provider,{value:r},e.children)}}}]);